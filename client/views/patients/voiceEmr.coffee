clearTranscription = ->
  tt = new Transcription
  $('#round_trans_area').val ''
  return

startListening = ->
  cl 'startListening'
  dictate.startListening()
  return

stopListening = ->
  dictate.stopListening()
  return

custom_cancel = ->
  dictate.cancel()
  return


# ---
# generated by js2coffee 2.2.0
FlowRouter.route '/voiceEmr', name: '/voiceEmr', action: ->
  BlazeLayout.render 'main',
    content: 'voiceEmr'
    hasHeader: true
    hasFooter: true
  return

Template.voiceEmr.onCreated ->
  inst = @
  inst.subscribe 'pub_voiceEMRs', mDefine.cstInfo.get()?.등록번호
  datacontext = inst.data
  datacontext.selData = new ReactiveVar()
  datacontext.curData = new ReactiveVar({})
  datacontext.isRecording = new ReactiveVar()
  datacontext.isRecording.set false

clickedFlag = false
Template.voiceEmr.onRendered ->

Template.voiceEmr.helpers
  cstInfo: -> if (info=mDefine.cstInfo.get())? then return info
  emrs: -> CollectionVoiceEMRs.find({}, {sort: yymmdd: 1})
  selData: -> Template.instance().data?.selData.get()
  curData: -> Template.instance().data?.curData.get()

  isRecording: -> Template.instance().data?.isRecording.get()

Template.voiceEmr.events
  'click [name=btnPastEMR]': (evt, inst) ->
    _id = $(evt.target).attr('data-id')
    datacontext = inst.data
    emr = CollectionVoiceEMRs.findOne(_id: _id)
    datacontext.selData.set {
      createdAt: emr.createdAt
      updatedAt: emr.updatedAt
      customer_id: emr.customer_id
      yymmdd: emr.yymmdd
      so: emr.so.substring(0, 100) + do -> if emr.so.length > 100 then return '...' else return ''
      a: emr.a.substring(0, 100) + do -> if emr.a.length > 100 then return '...' else return ''
      p: emr.p.substring(0, 100) + do -> if emr.p.length > 100 then return '...' else return ''
      주사: emr.주사.substring(0, 100) + do -> if emr.약처방.length > 100 then return '...' else return ''
      약처방: emr.약처방.substring(0, 100) + do -> if emr.주사.length > 100 then return '...' else return ''
    }
    $('#popup').css('display', 'block')
    $('#emr_pop_1').css('display', 'block')
  'click [name=btnClosePastPopup]': (evt, inst) ->
    $('#popup').css('display', 'none')
    $('.pop03').css('display', 'none')
  'click [name=btnGetPastPopup]': (evt, inst) ->
    $('#popup').css('display', 'none')
    $('.pop03').css('display', 'none')
    datacontext = inst.data
    datacontext.curData.set datacontext.selData.get()
    datacontext.selData.set({})
  'click [name=btnInsertPopup]': (evt, inst) ->
    $('#popup').css('display', 'block')
    $('#emr_pop_2').css('display', 'block')
  'click [name=btnSaveCurData]': (evt, inst) ->
    $('.pop03').css('display', 'none')
    $('#dim').css('display', 'block')
    datacontext = inst.data
    cl datacontext.curData.get()
    Meteor.call 'saveVoiceEmr', mDefine.cstInfo.get()._id, datacontext.curData.get(),  (err, rslt) ->
      if err then alert err
      else cl '저장완료'
  'click [name=goToCstList]': ->
    FlowRouter.go '/patientList'
  'click [name=goToNextCst]': (evt, inst) ->
    Meteor.call 'moveToNextCst', (err, rslt) ->
      if err then alert err
      else
        cl rslt
        mDefine.cstInfo.set rslt
        FlowRouter.go '/moveToBed'

  'click [name=insert_write]': (evt, inst) ->
    field = $('[name=pop_emr]:checked').attr('id')
    unless field?.length > 0 then return alert("입력항목을 선택해주세요.")
    clickedFlag = false
    $('[name=insert_textarea]').focus()
    # stopListening();
    mUtils.fr_keyOn();
  'click [name=insert_mic]': (evt, inst) ->
    #버튼은 비활성화, 마이크 버튼 누르면 변경
#    cl clickedFlag
    field = $('[name=pop_emr]:checked').attr('id')
    value = $('[name=insert_textarea]').val()
    unless field?.length > 0 then return alert("입력항목을 선택해주세요.")
    datacontext = inst.data

    if clickedFlag
      clickedFlag = false
      $('[name=insert_textarea]').focus()
#      custom_cancel();
      datacontext.isRecording.set false
      window.parent.postMessage 'stt_stop', '*'
      #음성정지때 현재 내용 저장(저장버튼으로 나가지 않아도 되게)
      curData = datacontext.curData.get()
      curData[field] = value
      datacontext.curData.set curData
    else
      x = document.getElementById("myAudio")
      x.play()
      clickedFlag = true
#      startListening();
      datacontext.isRecording.set true
      window.parent.postMessage 'stt_start', '*'

  'click [name=insert_save]': (evt, inst) ->
    clickedFlag = false
    $('[name=insert_textarea]').focus()
    field = $('[name=pop_emr]:checked').attr('id')
    value = $('[name=insert_textarea]').val()
    unless field?.length > 0 then return alert("입력항목을 선택해주세요.")
#    custom_cancel();
#    stopListening();
#    clearTranscription();  #음성저장내용삭
    #stop을 안하고 저장하는 케이스가 있어 저장 누를시 stop 과정 추가 테스트 필요
    datacontext = inst.data
    datacontext.isRecording.set false
#    window.parent.postMessage 'stt_stop', '*'

    window.parent.postMessage 'stt_save', '*'
    datacontext = inst.data
    curData = datacontext.curData.get()
    curData[field] = value
    datacontext.curData.set curData
    $('#popup').css('display', 'none')
    $('.pop03').css('display', 'none')
    mUtils.fr_keyOff();
  'click [name=pop_emr]': (evt, inst) ->
    field = $('[name=pop_emr]:checked').attr('id')
    value = $('[name=insert_textarea]').val()
    datacontext = inst.data
    curData = datacontext.curData.get()
#    cl curData[field]
    $('[name=insert_textarea]').val(curData[field])

  'click [name=btn_del]': (evt, inst) ->
    evt.preventDefault()
    datacontext = inst.data
#    if datacontext.isRecording.get()
    $('[name=insert_textarea]').val('')

#  'focusin #round_trans_area': (evt, inst) ->
#    mUtils.fr_keyOn()